{"ast":null,"code":"var _jsxFileName = \"/workspaces/to-do/src/components/ToDo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport './InputComponent';\nimport './style/ToDo.css';\nimport InputComponent from \"./InputComponent\";\nimport DoneList from \"./DoneList\";\nimport DoList from \"./DoList\";\nimport Alert from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDo() {\n  _s();\n  const [doTasks, setDoTasks] = useState([]);\n  const [doneTasks, setDoneTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const [date, setDate] = useState('');\n  const [power, setPower] = useState('');\n  const [Message, setMessage] = useState('');\n  const [alertVisibility, setAlertVisibility] = useState(false);\n  const listRef = useRef(null);\n  const ghostRef = useRef(null);\n  const [dragging, setDragging] = useState({\n    index: -1,\n    item: null,\n    x: 0,\n    y: 0,\n    target: null,\n    position: -1\n  });\n  const currentDate = new Date();\n  currentDate.setUTCHours(0, 0, 0, 0);\n  const inputDateValue = date;\n  const inputDate = new Date(inputDateValue);\n  inputDate.setUTCHours(0, 0, 0, 0);\n  const handleTouchStart = (e, index, listType, item) => {\n    disableScroll();\n    const touch = e.targetTouches[0];\n    const startX = touch.pageX;\n    const startY = touch.pageY;\n    const element = e.target;\n    const ghost = document.createElement(\"div\");\n    ghost.className = \"ghost\";\n    ghost.style.width = element.offsetWidth + \"px\";\n    ghost.style.height = element.offsetHeight + \"px\";\n    ghost.style.top = element.offsetTop + \"px\";\n    ghost.style.left = element.offsetLeft + \"px\";\n    ghost.style.position = \"absolute\";\n    ghost.innerHTML = element.innerHTML;\n    document.body.appendChild(ghost);\n    ghostRef.current = ghost;\n    setDragging({\n      index,\n      item,\n      x: startX,\n      y: startY,\n      target: null,\n      position: index,\n      listType\n    });\n  };\n  const handleTouchMove = e => {\n    if (dragging.item) {\n      const touch = e.targetTouches[0];\n      const currentX = touch.pageX;\n      const currentY = touch.pageY;\n      const ghost = ghostRef.current;\n      ghost.style.left = dragging.x + 'px';\n      ghost.style.top = dragging.y + 'px';\n      setDragging({\n        ...dragging,\n        x: currentX,\n        y: currentY,\n        target: null,\n        position: -1\n      });\n    }\n  };\n  const handleTouchEnd = (e, index) => {\n    enableScroll();\n    const dorect = document.querySelector('.do');\n    const donerect = document.querySelector('.done');\n    if (dragging.item) {\n      const ghost = ghostRef.current;\n      document.body.removeChild(ghost);\n      ghostRef.current = null;\n      const doarea = dorect.getBoundingClientRect();\n      const donearea = donerect.getBoundingClientRect();\n      if (dragging.listType === 'do' && donearea.left < dragging.x) {\n        const taskToMove = doTasks[index];\n        setDoTasks(prevTasks => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(index, 1);\n          return newTasks;\n        });\n        setDoneTasks(prevTasks => [...prevTasks, taskToMove]);\n      } else if (dragging.listType === 'done' && doarea.right > dragging.x) {\n        const taskToMove = doneTasks[index];\n        setDoneTasks(prevTasks => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(index, 1);\n          return newTasks;\n        });\n        setDoTasks(prevTasks => [...prevTasks, taskToMove]);\n      }\n      setDragging({\n        index: -1,\n        item: null,\n        x: 0,\n        y: 0,\n        target: null,\n        position: -1,\n        listType: null\n      });\n    }\n  };\n  const handleTaskDragStart = (e, listType, taskIndex, todo) => {\n    e.dataTransfer.setData('text/plain', JSON.stringify({\n      listType,\n      taskIndex\n    }));\n    console.log(todo);\n  };\n  const handleTaskDrop = (e, targetList) => {\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const {\n      listType,\n      taskIndex\n    } = JSON.parse(data);\n    if (listType !== targetList) {\n      if (listType === 'do') {\n        const taskToMove = doTasks[taskIndex];\n        setDoTasks(prevTasks => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(taskIndex, 1);\n          return newTasks;\n        });\n        setDoneTasks(prevTasks => [...prevTasks, taskToMove]);\n      } else if (listType === 'done') {\n        const taskToMove = doneTasks[taskIndex];\n        setDoneTasks(prevTasks => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(taskIndex, 1);\n          return newTasks;\n        });\n        setDoTasks(prevTasks => [...prevTasks, taskToMove]);\n      }\n    }\n  };\n  function disableScroll() {\n    document.body.style.overflow = 'hidden';\n  }\n  function enableScroll() {\n    document.body.style.overflow = 'auto';\n  }\n  const addTodo = () => {\n    if (inputDate < currentDate) {\n      setMessage('The task completion date cannot be in the past');\n      setAlertVisibility(true);\n      return;\n    }\n    if (task.trim() === '' || date.trim() === '' || power.trim === '') {\n      setMessage('You must specify the name of the task, select the time when the task should be completed and the priority of the task');\n      setAlertVisibility(true);\n      return;\n    }\n    setDoTasks([...doTasks, {\n      task,\n      date,\n      power\n    }]);\n    setTask('');\n    setDate('');\n    setPower('');\n  };\n  const confirmAlert = () => {\n    setAlertVisibility(false);\n  };\n  const removeTodo = (index, doOrDone) => {\n    if (doOrDone === \"do\") {\n      const newTodos = doTasks.slice();\n      newTodos.splice(index, 1);\n      setDoTasks(newTodos);\n    } else {\n      const newTodos = doneTasks.slice();\n      newTodos.splice(index, 1);\n      setDoneTasks(newTodos);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(InputComponent, {\n      task: task,\n      addTodo: addTodo,\n      date: date,\n      setDate: setDate,\n      setTask: setTask,\n      power: power,\n      setPower: setPower\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lists-content\",\n        children: [/*#__PURE__*/_jsxDEV(DoList, {\n          doTasks: doTasks,\n          removeTodo: removeTodo,\n          onTaskDragStart: handleTaskDragStart,\n          onTaskDrop: handleTaskDrop,\n          handleTouchEnd: handleTouchEnd,\n          handleTouchMove: handleTouchMove,\n          handleTouchStart: handleTouchStart,\n          ref: listRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DoneList, {\n          doneTasks: doneTasks,\n          onTaskDragStart: handleTaskDragStart,\n          onTaskDrop: handleTaskDrop,\n          removeTodo: removeTodo,\n          handleTouchEnd: handleTouchEnd,\n          handleTouchMove: handleTouchMove,\n          handleTouchStart: handleTouchStart,\n          ref: listRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      Confirm: confirmAlert,\n      ErrMessage: Message,\n      Visible: alertVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDo, \"Zg+bxl4VfcMN64l1Z8M+Tkry4Z0=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","useRef","InputComponent","DoneList","DoList","Alert","jsxDEV","_jsxDEV","ToDo","_s","doTasks","setDoTasks","doneTasks","setDoneTasks","task","setTask","date","setDate","power","setPower","Message","setMessage","alertVisibility","setAlertVisibility","listRef","ghostRef","dragging","setDragging","index","item","x","y","target","position","currentDate","Date","setUTCHours","inputDateValue","inputDate","handleTouchStart","e","listType","disableScroll","touch","targetTouches","startX","pageX","startY","pageY","element","ghost","document","createElement","className","style","width","offsetWidth","height","offsetHeight","top","offsetTop","left","offsetLeft","innerHTML","body","appendChild","current","handleTouchMove","currentX","currentY","handleTouchEnd","enableScroll","dorect","querySelector","donerect","removeChild","doarea","getBoundingClientRect","donearea","taskToMove","prevTasks","newTasks","splice","right","handleTaskDragStart","taskIndex","todo","dataTransfer","setData","JSON","stringify","console","log","handleTaskDrop","targetList","preventDefault","data","getData","parse","overflow","addTodo","trim","confirmAlert","removeTodo","doOrDone","newTodos","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onTaskDragStart","onTaskDrop","ref","Confirm","ErrMessage","Visible","_c","$RefreshReg$"],"sources":["/workspaces/to-do/src/components/ToDo.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport './InputComponent';\nimport './style/ToDo.css'\nimport InputComponent from \"./InputComponent\";\nimport DoneList from \"./DoneList\";\nimport DoList from \"./DoList\";\nimport Alert from \"./Alert\";\n\nfunction ToDo() {\n\n  const [doTasks, setDoTasks] = useState([]);\n  const [doneTasks, setDoneTasks] = useState([]);\n  const [task, setTask] = useState('');\n  const [date, setDate] = useState('');\n  const [power, setPower] = useState('');\n  const [Message, setMessage] = useState('');\n  const [alertVisibility, setAlertVisibility] = useState(false);\n\n  const listRef = useRef(null);\n  const ghostRef = useRef(null);\n\n  const [dragging, setDragging] = useState({\n    index: -1,\n    item: null,\n    x: 0,\n    y: 0,\n    target: null,\n    position: -1,\n  });\n\n  const currentDate = new Date();\n  currentDate.setUTCHours(0, 0, 0, 0);\n  const inputDateValue = date;\n  const inputDate = new Date(inputDateValue);\n  inputDate.setUTCHours(0, 0, 0, 0);\n \n  \n  const handleTouchStart = (e, index, listType, item) => {\n    disableScroll();\n    const touch = e.targetTouches[0];\n    const startX = touch.pageX;\n    const startY = touch.pageY;\n    const element = e.target;\n    const ghost = document.createElement(\"div\");\n\n    ghost.className = \"ghost\";\n    ghost.style.width = element.offsetWidth + \"px\";\n    ghost.style.height = element.offsetHeight + \"px\";\n    ghost.style.top = element.offsetTop + \"px\";\n    ghost.style.left = element.offsetLeft + \"px\";\n    ghost.style.position = \"absolute\";\n    ghost.innerHTML = element.innerHTML;\n\n    document.body.appendChild(ghost);\n    ghostRef.current = ghost;\n\n    setDragging({\n      index,\n      item,\n      x: startX,\n      y: startY,\n      target: null,\n      position: index,\n      listType,\n    });\n\n  };\n\n  const handleTouchMove = (e) => {\n\n\n    if (dragging.item) {\n\n      const touch = e.targetTouches[0];\n      const currentX = touch.pageX;\n      const currentY = touch.pageY;\n      const ghost = ghostRef.current;\n      ghost.style.left = (dragging.x) + 'px';\n      ghost.style.top = dragging.y + 'px';\n\n      setDragging({\n        ...dragging,\n        x: currentX,\n        y: currentY,\n        target: null,\n        position: -1,\n      });\n    }\n\n  };\n\n  const handleTouchEnd = (e, index) => {\n    enableScroll();\n    const dorect = document.querySelector('.do')\n    const donerect = document.querySelector('.done')\n    if (dragging.item) {\n      const ghost = ghostRef.current;\n      document.body.removeChild(ghost);\n      ghostRef.current = null;\n      const doarea = dorect.getBoundingClientRect();\n      const donearea = donerect.getBoundingClientRect();\n\n      if ((dragging.listType === 'do') && (donearea.left < dragging.x)) {\n        const taskToMove = doTasks[index];\n        setDoTasks((prevTasks) => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(index, 1);\n          return newTasks;\n        });\n        setDoneTasks((prevTasks) => [...prevTasks, taskToMove]);\n      } else if ((dragging.listType === 'done') && (doarea.right > dragging.x)) {\n        const taskToMove = doneTasks[index];\n        setDoneTasks((prevTasks) => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(index, 1);\n          return newTasks;\n        });\n        setDoTasks((prevTasks) => [...prevTasks, taskToMove]);\n      }\n\n      setDragging({\n        index: -1,\n        item: null,\n        x: 0,\n        y: 0,\n        target: null,\n        position: -1,\n        listType: null,\n      });\n    }\n\n  };\n \n\n\n  const handleTaskDragStart = (e, listType, taskIndex, todo) => {\n    e.dataTransfer.setData('text/plain', JSON.stringify({ listType, taskIndex }));\n    console.log(todo);\n  };\n\n  const handleTaskDrop = (e, targetList) => {\n    e.preventDefault();\n    const data = e.dataTransfer.getData('text/plain');\n    const { listType, taskIndex } = JSON.parse(data);\n\n    if (listType !== targetList) {\n      if (listType === 'do') {\n        const taskToMove = doTasks[taskIndex];\n        setDoTasks((prevTasks) => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(taskIndex, 1);\n          return newTasks;\n        });\n        setDoneTasks((prevTasks) => [...prevTasks, taskToMove]);\n      } else if (listType === 'done') {\n        const taskToMove = doneTasks[taskIndex];\n        setDoneTasks((prevTasks) => {\n          const newTasks = [...prevTasks];\n          newTasks.splice(taskIndex, 1);\n          return newTasks;\n        });\n        setDoTasks((prevTasks) => [...prevTasks, taskToMove]);\n      }\n    }\n  }\n\n\n  function disableScroll() {\n    document.body.style.overflow = 'hidden';\n\n  }\n  function enableScroll() {\n    document.body.style.overflow = 'auto';\n\n  }\n\n\n\n\n\n  const addTodo = () => {\n\n    if (inputDate < currentDate) {\n      setMessage('The task completion date cannot be in the past');\n      setAlertVisibility(true);\n      return;\n    }\n    if (task.trim() === '' || date.trim() === ''|| power.trim ===''){\n      setMessage('You must specify the name of the task, select the time when the task should be completed and the priority of the task');\n      setAlertVisibility(true);\n      return;\n    } \n\n    setDoTasks([...doTasks, { task, date, power }]);\n    setTask('');\n    setDate('');\n    setPower('');\n  };\n\n  const confirmAlert = ()=>{\n    setAlertVisibility(false);\n  }\n\n  const removeTodo = (index, doOrDone) => {\n    if (doOrDone===\"do\") {\n      const newTodos = doTasks.slice();\n      newTodos.splice(index, 1);\n      setDoTasks(newTodos);\n    } else {\n      const newTodos = doneTasks.slice();\n      newTodos.splice(index, 1);\n      setDoneTasks(newTodos);\n    }\n  };\n\n  return (\n    <div className=\"main\">\n      <InputComponent task={task}\n        addTodo={addTodo}\n        date={date}\n        setDate={setDate}\n        setTask={setTask}\n        power={power}\n        setPower={setPower}\n      />\n      <div className=\"lists\">\n        <div className=\"lists-content\">\n\n\n        <DoList doTasks={doTasks}\n          removeTodo={removeTodo}\n          onTaskDragStart={handleTaskDragStart}\n          onTaskDrop={handleTaskDrop}\n          handleTouchEnd={handleTouchEnd}\n          handleTouchMove={handleTouchMove}\n          handleTouchStart={handleTouchStart}\n          ref={listRef}\n\n        />\n\n        <DoneList doneTasks={doneTasks}\n          onTaskDragStart={handleTaskDragStart}\n          onTaskDrop={handleTaskDrop}\n          removeTodo={removeTodo}\n          handleTouchEnd={handleTouchEnd}\n          handleTouchMove={handleTouchMove}\n          handleTouchStart={handleTouchStart}\n          ref={listRef}\n\n        />\n        </div>\n      </div>\n      <Alert Confirm={confirmAlert} ErrMessage={Message} Visible={alertVisibility}/>\n    </div>\n  );\n}\n\nexport default ToDo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}